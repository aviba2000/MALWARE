#!/bin/bash

# This script takes as input a script and outputs the same script as a bash string
# removing its comments and empty lines.
# Write the output variable as a new script: echo -e $str > script.sh && chmod +x script.sh

if [ $# -ne 1 ]
then
	echo "Usage: ./Script_to_String.sh SCRIPT_NAME"
	exit -1
fi

input=$1

#echo -n "str=\""
echo -n "str=\""

while IFS= read -r line
do
	if [ "$line" != "" ] && ( [ "${line:0:1}" != "#" ] || [ "${line:0:2}" == "#!" ] ); then
		new_line=${line//\"/\\\"} # Modify " for \" to not break the variable
		
		new_line=${new_line//\~/\\\~}
		new_line=${new_line//\`/\\\`}
		# new_line=${new_line//\#/\\\#}
		new_line=${new_line//\$/\\\$}
		# new_line=${new_line//\&/\\\&}
		new_line=${new_line//\*/\\\*}
		new_line=${new_line//\(/\\\(}
		new_line=${new_line//\)/\\\)}
		# new_line=${new_line//\|/\\\|}
		# new_line=${new_line//\[/\\\[}
		# new_line=${new_line//\]/\\\]}
		new_line=${new_line//\{/\\\{}
		new_line=${new_line//\}/\\\}}
		# new_line=${new_line//\;/\\\;}
		new_line=${new_line//\'/\\\'}
		# new_line=${new_line//\</\\\<}
		# new_line=${new_line//\>/\\\>}
		# new_line=${new_line//\//\\\/}
		# new_line=${new_line//\?/\\\?}
		# new_line=${new_line//\!/\\\!}
		
		
		#new_line=${new_line//\\\\/\\}
		#new_line=${new_line//\\\\/\\}
		
		#new_line=${new_line//\{/\\\{}
		#new_line=${new_line//\|/\\\|} # not sure about this one
		# echo "" # Comment this line to have the whole script as a one-line string
		# new_line=${line//\'/\\\'}
		
		# new_line=`echo $new_line | cut -d'#\>' -f1`
		new_line=`echo $new_line | awk -F " # " ' {print $1}'`
		echo -n "$new_line \n"
	fi
done < "$input"

#echo " \""
echo "\""
